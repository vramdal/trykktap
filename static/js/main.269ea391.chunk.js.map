{"version":3,"sources":["App.module.scss","App.tsx","AppRouter.tsx","index.tsx"],"names":["module","exports","strommingstapPr100mTabell","undefined","console","log","App","strommingstap","useFormState","destinasjonTrykk","avstand","hoydeforskjell","diameter","vannmengde","pumpetype","formState","number","select","strommingstapPr100m","strommingstapRow","find","row","values","parseFloat","antallSlanger","Math","ceil","hoydeTap","utgangstrykk","className","styles","app","horizontal","value","radiolabel","AppRouter","ReactDOM","render","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAa,wBAAwB,WAAa,wBAAwB,WAAa,0B,yKCI1HC,EAA4B,CAChC,CAAC,IAAK,SAAMC,GACZ,CAAC,IAAK,EAAG,IACT,CAAC,IAAM,EAAG,IACV,CAAC,UAAMA,EAAW,GAClB,CAAC,SAAMA,EAAW,IAMpBC,QAAQC,IAAI,UAAW,UAEvB,IA2GeC,EA3GH,WACVF,QAAQC,IAAI,UAAW,OACvB,IAoBIE,EApBJ,EAAwCC,YAAa,CACnDC,iBAAkB,EAClBC,QAAS,EACTC,eAAgB,EAChBC,SAAU,IACVC,WAAY,MACZC,UAAW,WANb,mBAAOC,EAAP,YAAoBC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,OASxBC,OAA2Cf,EACzCgB,EAAmBjB,EAA0BkB,MAAK,SAAAC,GAAG,OAAKA,EAAI,GAAK,KAAQN,EAAUO,OAAOT,cAE9FM,IAEAD,EADgC,QAA9BH,EAAUO,OAAOV,SACGO,EAAiB,GAEjBA,EAAiB,IAKvCD,IACFX,EAAgBW,EAAsBK,WAAWR,EAAUO,OAAOZ,SAAW,IAG/E,IAAMc,EAAgBC,KAAKC,KAAgC,IAA3BX,EAAUO,OAAOZ,QAhC9B,IAkCbiB,EAAWZ,EAAUO,OAAOX,eAAiB,GAE7CiB,EAAeL,WAAWR,EAAUO,OAAOb,kBAAoBF,EAAgBoB,EAErF,OACE,yBAAKE,UAAWC,IAAOC,KACrB,8BACE,iCACE,6BAASF,UAAWC,IAAOE,YACzB,2CACA,sDACmB,6BACjB,2BAAYf,EAAO,cACjB,4BAAQgB,MAAO,KAAf,aACA,4BAAQA,MAAO,KAAf,aACA,4BAAQA,MAAO,KAAf,cACA,4BAAQA,MAAO,MAAf,cACA,4BAAQA,MAAO,KAAf,gBAGJ,iDACc,6BACZ,0BAAWjB,EAAO,uBAGtB,6BAASa,UAAWC,IAAOE,YACzB,sCACA,8CACc,6BACZ,0BAAWhB,EAAO,aAEpB,2DACwB,6BACtB,0BAAWA,EAAO,oBAEpB,yBAAKa,UAAW,cAAhB,iBACgB,6BACd,2BAAYZ,EAAO,YACjB,4BAAQgB,MAAO,OAAf,UACA,4BAAQA,MAAO,KAAf,SAIN,6BAASJ,UAAWC,IAAOE,YACzB,wCACA,mDACgB,6BACd,0BAAMH,UAAWC,IAAOI,YAAa3B,EAArC,SAEF,8CACW,6BACT,0BAAMsB,UAAWC,IAAOI,YAAaP,EAArC,UAGJ,6BAASE,UAAWC,IAAOE,YACzB,2CACW,6BACT,2BAAYf,EAAO,aACjB,4BAAQgB,MAAO,UAAf,yBACA,4BAAQA,MAAO,SAAf,wBAGJ,2DACwB,6BACtB,0BAAMJ,UAAWC,IAAOI,YAAaN,IAEvC,iDACiB,6BACf,0BAAMC,UAAWC,IAAOI,YAAaV,SCpEpCW,EA1CsB,WACnC,OAAQ,kBAAC,EAAD,OCIV/B,QAAQC,IAAI,YAAa,UACzB+B,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.269ea391.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"horizontal\":\"App_horizontal__3Hnzd\",\"radiolabel\":\"App_radiolabel__38C3M\",\"radioGroup\":\"App_radioGroup__3sXMK\"};","import React from 'react'\n// import './App.scss'\nimport styles from './App.module.scss'; // Import css modules stylesheet as styles\nimport { useFormState } from 'react-use-form-state';\n\nconst strommingstapPr100mTabell = [\n  [250, 0.25, undefined],\n  [500, 1, 0.1],\n  [1000, 4, 0.5],\n  [1500, undefined, 1],\n  [2000, undefined, 2]\n];\n\nconst slangelengde = 25;\n// const vannveggForbruk = 800;\n\nconsole.log('App.tsx', 'Global');\n\nconst App = () => {\n  console.log('App.tsx', 'App');\n  const [formState, { number, select }] = useFormState({\n    destinasjonTrykk: 1,\n    avstand: 1,\n    hoydeforskjell: 0,\n    diameter: \"4\",\n    vannmengde: \"250\",\n    pumpetype: \"10 bar\"\n\n  });\n  let strommingstapPr100m : number | undefined = undefined;\n  const strommingstapRow = strommingstapPr100mTabell.find(row => (row[0] + \"\") === formState.values.vannmengde);\n\n  if (strommingstapRow) {\n    if (formState.values.diameter === \"2.5\") {\n      strommingstapPr100m = strommingstapRow[1];\n    } else  {\n      strommingstapPr100m = strommingstapRow[2];\n    }\n  }\n\n  let strommingstap;\n  if (strommingstapPr100m) {\n    strommingstap = strommingstapPr100m * parseFloat(formState.values.avstand) * 10;\n  }\n\n  const antallSlanger = Math.ceil(formState.values.avstand * 1000 / slangelengde);\n\n  const hoydeTap = formState.values.hoydeforskjell / 10;\n\n  const utgangstrykk = parseFloat(formState.values.destinasjonTrykk) + strommingstap + hoydeTap;\n\n  return (\n    <div className={styles.app}>\n      <main>\n        <article>\n          <section className={styles.horizontal}>\n            <h1>Destinasjon</h1>\n            <label>\n              Ønsket vannmengde<br/>\n              <select {...select('vannmengde')}>\n                <option value={250}>250 l/min</option>\n                <option value={500}>500 l/min</option>\n                <option value={1000}>1000 l/min</option>\n                <option value={1500}>1500 l/min</option>\n                <option value={2000}>2000 l/min</option>\n              </select>\n            </label>\n            <label>\n              Ønsket trykk<br/>\n              <input {...number('destinasjonTrykk')}/>\n            </label>\n          </section>\n          <section className={styles.horizontal}>\n            <h1>Utlegg</h1>\n            <label>\n              Avstand i km<br/>\n              <input {...number('avstand')}/>\n            </label>\n            <label>\n              Høydeforskjell i meter<br/>\n              <input {...number('hoydeforskjell')}/>\n            </label>\n            <div className={\"radioGroup\"}>\n              Slangediameter<br/>\n              <select {...select('diameter')}>\n                <option value={\"2.5\"}>2½\"</option>\n                <option value={\"4\"}>4\"</option>\n              </select>\n            </div>\n          </section>\n          <section className={styles.horizontal}>\n            <h1>Resultat</h1>\n            <label>\n              Strømmingstap:<br/>\n              <span className={styles.radiolabel}>{strommingstap} bar</span>\n            </label>\n            <label>\n              Høydetap:<br/>\n              <span className={styles.radiolabel}>{hoydeTap} bar</span>\n            </label>\n          </section>\n          <section className={styles.horizontal}>\n            <label>\n              Pumpetype<br/>\n              <select {...select('pumpetype')}>\n                <option value={\"10 bar\"}>Maks 10 bar (Ziegler)</option>\n                <option value={\"6 bar\"}>Maks 6 bar (Otter)</option>\n              </select>\n            </label>\n            <label>\n              Nødvendig utgangstrykk<br/>\n              <span className={styles.radiolabel}>{utgangstrykk}</span>\n            </label>\n            <label>\n              Antall slanger:<br/>\n              <span className={styles.radiolabel}>{antallSlanger}</span>\n            </label>\n          </section>\n        </article>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App\n","// src/AppRouter.tsx\n\nimport React, { FunctionComponent } from 'react'\nimport App from './App'\n\nconst AppRouter: FunctionComponent = () => {\n  return (<App/>);\n}\n\n/*\n// TODO EE: To replace Recoil with Redux Toolkit;\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n<Router>\n  <Provider store={store}>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n  </Provider>\n</Router>\n\n */\n\n/*\n\n// TODO: EE: Without Recoil or Redux Toolkit;\n\n// src/AppRouter.tsx\n\nimport React, { FunctionComponent } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport App from './App'\n\nconst AppRouter: FunctionComponent = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Router>\n  )\n}\n\n */\n\nexport default AppRouter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport AppRouter from './AppRouter'\n\n// You need bootstrap? $ yarn add bootstrap\n// See: https://create-react-app.dev/docs/adding-bootstrap\n// import 'bootstrap/dist/css/bootstrap.css';\n\n// Single-page application (SPA)\nconsole.log('index.tsx', 'Global');\nReactDOM.render(<AppRouter />, document.getElementById('root'))\n\n// If you want to Pre-render with react-snap\n// Step 1: install $ yarn add --dev react-snap\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\n// Step 3: replace to the script below.\n\n/*\nimport { hydrate, render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootElement = document.getElementById('root')\nif (rootElement && rootElement!.hasChildNodes()) {\n  hydrate(<AppRouter />, rootElement)\n\n  // Precache - set to 'register' once you Pre-render\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.register()\n} else {\n  render(<AppRouter />, rootElement)\n}\n*/\n"],"sourceRoot":""}