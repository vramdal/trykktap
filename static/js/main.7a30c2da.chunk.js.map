{"version":3,"sources":["App.module.scss","App.tsx","AppRouter.tsx","index.tsx"],"names":["module","exports","strommingstapPr100mTabell","undefined","console","log","LabelledField","props","className","styles","labelledField","label","children","LabelledDiv","RangeInput","omit","value","displayValue","unit","stringifier","n","ValueWithUnit","toFixed","valueWithUnit","isNaN","App","strommingstap","useFormState","destinasjonTrykk","avstand","hoydeforskjell","diameter","vannmengde","pumpetype","formState","select","range","strommingstapPr100m","strommingstapRow","find","row","values","parseFloat","antallSlanger","Math","ceil","hoydeTap","utgangstrykk","app","horizontal","smallText","max","min","step","radiolabel","AppRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a30c2da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"horizontal\":\"App_horizontal__3Hnzd\",\"radiolabel\":\"App_radiolabel__38C3M\",\"valueWithUnit\":\"App_valueWithUnit__3iKP7\",\"radioGroup\":\"App_radioGroup__3sXMK\",\"smallText\":\"App_smallText__2bVas\",\"labelledField\":\"App_labelledField__1TUYg\"};","import React from 'react'\n// import './App.scss'\nimport styles from './App.module.scss' // Import css modules stylesheet as styles\nimport './range-input-style.css'\nimport './select-style.css'\nimport omit from 'lodash/omit'\nimport { BaseInputProps, useFormState } from 'react-use-form-state'\n\nconst strommingstapPr100mTabell = [\n  [250, 0.25, undefined],\n  [500, 1, 0.1],\n  [1000, 4, 0.5],\n  [1500, undefined, 1],\n  [2000, undefined, 2],\n]\n\nconst slangelengde = 25\n// const vannveggForbruk = 800;\n\nconsole.log('App.tsx', 'Global')\n\nconst LabelledField = (props: { label: string; children: React.ReactNode }) => (\n  <>\n    <div className={styles.labelledField}>\n      {props.label}\n      <br />\n      {props.children}\n    </div>\n  </>\n)\n\nconst LabelledDiv = (props: { label: string; children: React.ReactNode; className?: string }) => (\n  <>\n    <div className={props.className}>\n      {props.label}\n      <br />\n      {props.children}\n    </div>\n  </>\n)\n\nfunction RangeInput(props: BaseInputProps<any> & { displayValue: number; min: number; max: number; step: number; unit: string }) {\n  return (\n    <>\n      <input {...omit(props, 'displayValue', 'unit')} />\n      <ValueWithUnit value={props.displayValue} unit={props.unit} stringifier={(n) => n} />\n    </>\n  )\n}\n\nconst ValueWithUnit = ({ unit, className = '', value, stringifier = (n) => n.toFixed(0) }: { value: number; unit: string; stringifier?: (n: any) => string; className?: string }) => {\n  return (\n    <div className={styles.valueWithUnit + ' ' + className}>\n      {((isNaN(value) || value === undefined || value === null) && `Ikke definert`) || (\n        <>\n          <span className={styles.valueWithUnit + '__value'}>{stringifier(value)}</span>\n          <span className={styles.valueWithUnit + '__unit'}>{unit}</span>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst App = () => {\n  console.log('App.tsx', 'App')\n  const [formState, { select, range }] = useFormState({\n    destinasjonTrykk: 5,\n    avstand: 1,\n    hoydeforskjell: 0,\n    diameter: '4',\n    vannmengde: '250',\n    pumpetype: '10 bar',\n  })\n  let strommingstapPr100m: number | undefined = undefined\n  const strommingstapRow = strommingstapPr100mTabell.find((row) => row[0] + '' === formState.values.vannmengde)\n\n  if (strommingstapRow) {\n    if (formState.values.diameter === '2.5') {\n      strommingstapPr100m = strommingstapRow[1]\n    } else {\n      strommingstapPr100m = strommingstapRow[2]\n    }\n  }\n\n  let strommingstap\n  if (strommingstapPr100m) {\n    strommingstap = (strommingstapPr100m * parseFloat(formState.values.avstand)) / 100\n  } else {\n    strommingstap = undefined\n  }\n\n  const antallSlanger = Math.ceil(formState.values.avstand / slangelengde)\n\n  const hoydeTap = formState.values.hoydeforskjell / 10\n\n  const utgangstrykk = parseFloat(formState.values.destinasjonTrykk) + strommingstap + hoydeTap\n  return (\n    <div className={styles.app}>\n      <main>\n        <article>\n          <>\n            <h1>Destinasjon</h1>\n            <section className={styles.horizontal}>\n              <LabelledField label={'Ønsket vannmengde'}>\n                <span className={styles.smallText}>Vannvegg: 800 l/min, strålerør: 500 l/min</span>\n                <select {...select('vannmengde')}>\n                  <option value={250}>250 l/min</option>\n                  <option value={500}>500 l/min</option>\n                  <option value={1000}>1000 l/min</option>\n                  <option value={1500}>1500 l/min</option>\n                  <option value={2000}>2000 l/min</option>\n                </select>\n              </LabelledField>\n              <LabelledField label={'Ønsket trykk'}>\n                <RangeInput {...range('destinasjonTrykk')} max={10} min={1} step={1} unit={'bar'} displayValue={formState.values.destinasjonTrykk} />\n              </LabelledField>\n            </section>\n          </>\n          <h1>Utlegg</h1>\n          <section className={styles.horizontal}>\n            <LabelledField label={'Avstand i m'}>\n              <RangeInput {...range('avstand')} unit={'m'} displayValue={formState.values.avstand} min={0} max={1000} step={100} />\n            </LabelledField>\n            <LabelledField label={'Høydeforskjell i meter'}>\n              <RangeInput {...range('hoydeforskjell')} unit={'m'} displayValue={formState.values.hoydeforskjell} min={-100} max={200} step={1} />\n            </LabelledField>\n            <LabelledDiv className={'radioGroup'} label={'Slange'}>\n              <select {...select('diameter')}>\n                <option value={'2.5'}>2½\"</option>\n                <option value={'4'}>4\"</option>\n              </select>\n            </LabelledDiv>\n          </section>\n          <h1>Resultat</h1>\n          <section className={styles.horizontal}>\n            <LabelledField label={'Strømmingstap:'}>\n              <ValueWithUnit value={strommingstap} unit={'bar'} stringifier={(n) => n} />\n            </LabelledField>\n            <LabelledField label={'Høydetap:'}>\n              <span className={styles.radiolabel}>{hoydeTap} bar</span>\n            </LabelledField>\n          </section>\n          <section className={styles.horizontal}>\n            {/*<label>\n              Pumpekapasitet<br/>\n              <select {...select('pumpetype')}>\n                <option value={\"10 bar\"}>10 bar (Ziegler)</option>\n                <option value={\"6 bar\"}>6 bar (Otter)</option>\n              </select>\n            </label>*/}\n            <LabelledField label={'Nødvendig utgangstrykk'}>\n              <ValueWithUnit value={utgangstrykk} unit={'bar'} stringifier={(n) => n.toFixed(2)} />\n            </LabelledField>\n            <LabelledField label={'Antall slanger:'}>\n              <span className={styles.radiolabel}>{antallSlanger}</span>\n            </LabelledField>\n          </section>\n        </article>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// src/AppRouter.tsx\n\nimport React, { FunctionComponent } from 'react'\nimport App from './App'\n\nconst AppRouter: FunctionComponent = () => {\n  return (<App/>);\n}\n\n/*\n// TODO EE: To replace Recoil with Redux Toolkit;\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n<Router>\n  <Provider store={store}>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n    </Switch>\n  </Provider>\n</Router>\n\n */\n\n/*\n\n// TODO: EE: Without Recoil or Redux Toolkit;\n\n// src/AppRouter.tsx\n\nimport React, { FunctionComponent } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport App from './App'\n\nconst AppRouter: FunctionComponent = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n      </Switch>\n    </Router>\n  )\n}\n\n */\n\nexport default AppRouter\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport AppRouter from './AppRouter'\n\n// You need bootstrap? $ yarn add bootstrap\n// See: https://create-react-app.dev/docs/adding-bootstrap\n// import 'bootstrap/dist/css/bootstrap.css';\n\n// Single-page application (SPA)\nconsole.log('index.tsx', 'Global');\nReactDOM.render(<AppRouter />, document.getElementById('root'))\n\n// If you want to Pre-render with react-snap\n// Step 1: install $ yarn add --dev react-snap\n// Step 2: add to package.json run script: \"postbuild\": \"react-snap\"\n// Step 3: Add to package.json: \"reactSnap\":{\"inlineCss\":true}\n// Step 3: replace to the script below.\n\n/*\nimport { hydrate, render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n\nconst rootElement = document.getElementById('root')\nif (rootElement && rootElement!.hasChildNodes()) {\n  hydrate(<AppRouter />, rootElement)\n\n  // Precache - set to 'register' once you Pre-render\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: http://bit.ly/CRA-PWA\n  serviceWorker.register()\n} else {\n  render(<AppRouter />, rootElement)\n}\n*/\n"],"sourceRoot":""}